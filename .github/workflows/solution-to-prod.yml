name: solution-to-prod

on:
  workflow_call:
    inputs: 
      solution_name:
        description: 'The solution name.'
        type: string
        default: GitHubDemo       

      solution_shipping_folder:
        description: 'Folder name to stage the managed solution for deployment.'
        type: string
        default: out/ship

      solution_outbound_folder:
        description: 'Intermediate location of the packed unmanaged solution.'
        type: string
        default: out/solutions

      solution_source_folder: 
        description: 'Folder path where the source solution lives in repo.'
        type: string
        default: src/solutions

      solution_release_folder:
        description: 'Location to extract GH artifacts before PROD import.'
        type: string
        default: out/release

      BUILD_ENVIRONMENT_URL:
        description: 'Build (conversion) environment URL.'
        type: string
        required: true      

      PRODUCTION_ENVIRONMENT_URL: 
        description: 'Production environment URL.'
        type: string
        required: true
        default: https://org8e5dc8f7.crm.dynamics.com

      CLIENT_ID: 
        description: 'Azure app (SPN) client ID.'
        type: string
        required: true

      TENANT_ID: 
        description: 'Azure tenant ID.'
        type: string
        required: true

    secrets:
      envSecret:
        description: 'Client secret for the SPN.'
        required: true

jobs:
  convert-to-managed:
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
      - name: üì• Checkout source
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: üì¶ Pack unmanaged solution from source folder
        uses: microsoft/powerplatform-actions/pack-solution@v1
        with:
          solution-folder: "${{ inputs.solution_source_folder }}/${{ inputs.solution_name }}"
          solution-file: "${{ inputs.solution_outbound_folder }}/${{ inputs.solution_name }}.zip"
          solution-type: Unmanaged

      - name: üì§ Import unmanaged solution into build environment
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: "${{ inputs.BUILD_ENVIRONMENT_URL }}"
          app-id: "${{ inputs.CLIENT_ID }}"
          client-secret: "${{ secrets.envSecret }}"
          tenant-id: "${{ inputs.TENANT_ID }}"
          solution-file: "${{ inputs.solution_outbound_folder }}/${{ inputs.solution_name }}.zip"
          force-overwrite: true
          publish-changes: true

      - name: üõ† Export solution as managed
        uses: microsoft/powerplatform-actions/export-solution@v1
        with:
          environment-url: "${{ inputs.BUILD_ENVIRONMENT_URL }}"
          app-id: "${{ inputs.CLIENT_ID }}"
          client-secret: "${{ secrets.envSecret }}" 
          tenant-id: "${{ inputs.TENANT_ID }}"
          solution-name: "${{ inputs.solution_name }}"
          managed: true
          solution-output-file: "${{ inputs.solution_shipping_folder }}/${{ inputs.solution_name }}_managed.zip"

      - name: üîç Check managed solution file exists
        run: |
          echo "Listing contents of ${{ inputs.solution_shipping_folder }}"
          dir "${{ inputs.solution_shipping_folder }}"

      - name: üóÉ Upload managed solution as artifact
        uses: actions/upload-artifact@v3
        with:
          name: managedSolutions
          path: "${{ inputs.solution_shipping_folder }}/${{ inputs.solution_name }}_managed.zip"

  release-to-prod:
    needs: [convert-to-managed]
    runs-on: windows-latest
    env:
      RUNNER_DEBUG: 1

    steps:
      - name: üì• Checkout repo
        uses: actions/checkout@v2
        with:
          lfs: true

      - name: üì¶ Download managed solution from artifact store
        uses: actions/download-artifact@v3
        with:
          name: managedSolutions
          path: "${{ inputs.solution_release_folder }}"

      - name: üöÄ Import managed solution into PROD
        uses: microsoft/powerplatform-actions/import-solution@v1
        with:
          environment-url: "${{ inputs.PRODUCTION_ENVIRONMENT_URL }}"
          app-id: "${{ inputs.CLIENT_ID }}"
          client-secret: "${{ secrets.envSecret }}"
          tenant-id: "${{ inputs.TENANT_ID }}"
          solution-file: "${{ inputs.solution_release_folder }}/${{ inputs.solution_name }}_managed.zip"
          force-overwrite: true
          publish-changes: true
